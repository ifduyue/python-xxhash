name: build

on: [push]

jobs:
  build_wheels:
    name: Build ${{ matrix.archs }} ${{ matrix.build }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        archs: ["x86_64, i686", "aarch64", "ppc64le", "s390x"]
        build: ["manylinux", "musllinux"]
        include:
          - os: windows-2019
            archs: "AMD64"
          - os: windows-2019
            archs: "x86"
          - os: windows-2019
            archs: "ARM64"
          - os: macos-13
            archs: "x86_64, arm64"

    steps:
      - name: Disable git autocrlf
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: runner.os == 'Linux'

      - name: Enable PyPy and free-threading
        shell: bash
        run: |
          echo "CIBW_ENABLE=pypy cpython-freethreading" >> "$GITHUB_ENV"

      - name: Enable CPython pre-release wheels
        shell: bash
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
            echo "CIBW_ENABLE=$CIBW_ENABLE cpython-prerelease" >> "$GITHUB_ENV"

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.3
        env:
          CIBW_ARCHS: "${{ matrix.archs }}"
          CIBW_BUILD: "${{ matrix.build && '*-' || ''}}${{ matrix.build }}*"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.build }}-${{ matrix.archs }}
          path: ./wheelhouse/*.whl


  build_sdist:
    name: Build sdist
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: python -m pip install -U pip 'setuptools>=45' 'setuptools-scm>=6.2'

      - name: Build sdist
        run: python setup.py build sdist

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-dist
          path: dist/*.tar.gz


  upload_test_pypi:
    name: Upload to Test PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && github.repository == 'ifduyue/python-xxhash' && !startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write
    environment:
      name: test-pypi
      url: https://test.pypi.org/project/xxhash/
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Upload to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          skip-existing: true
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && github.repository == 'ifduyue/python-xxhash' && startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/project/xxhash/
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Upload to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          skip-existing: true
